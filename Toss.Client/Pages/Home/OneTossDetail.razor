@page "/toss/{TossId}"
@inject IHttpApiClientRequestBuilderFactory httpBuilder
@inject IMarkdownService markdown
@inject IJsInterop JsInterop
@if (tossDetail != null)
{
    <div class="form-inline">

        @foreach (var hashTag in tossDetail.Hashtags ?? new List<string>())
        {
            <div class="form-group">
                <div class="input-group m-1 btn-group" role="group">
                    <NavLink href="@("/tag/"+hashTag)" Match="NavLinkMatch.All" class="btn btn-secondary tag-link">
                        #@hashTag
                    </NavLink>
                </div>
            </div>
        }
    </div>
    <hr />
    @markdown.ToHtml(tossDetail.Content)

    }
    @functions{
[Parameter]
    protected string TossId { get; set; }
    private TossDetail tossDetail
    {
        get;
        set;
    }

    protected override async Task OnParametersSetAsync()
    {
        await httpBuilder.Create("/api/toss/detail/" + TossId)
              .OnOK<TossDetail>(r =>
             {
                 this.tossDetail = r;
                 StateHasChanged();
             })
              .Get();

    }

    }
