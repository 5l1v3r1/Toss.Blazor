@inject HttpClient Http
@inject IUriHelper UriHelper;
<h4>Use a Toss account to log in.</h4>
<form method="post" onsubmit="@(async () => await TryLogin())">

    <div class="form-group">
        <label for="Email">Email</label>
        <input bind="@loginViewModel.Email" id="Email" class="form-control" />
        <ValidationError Errors="@_errors" FieldName="Email" />
    </div>
    <div class="form-group">
        <label asp-for="Password">Password</label>
        <input bind="@loginViewModel.Password" id="Password" class="form-control" />
        <ValidationError Errors="@_errors" FieldName="Password" />
    </div>
    <div class="form-group">
        <div class="checkbox">
            <label asp-for="RememberMe">
                <input bind="@loginViewModel.RememberMe" type="checkbox" />
                <label for="RememberMe">Remember me</label>
            </label>
        </div>
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-default">Log in</button>
        <a href="/account/forgotPassword">Forgot your password?</a>
    </div>
</form>


@functions{
    LoginViewModel loginViewModel = new LoginViewModel();
    Dictionary<string, string> _errors;
    async Task TryLogin()
    {

        await new HttpApiClientRequestBuilder(Http, "/api/account/login", UriHelper)
            .OnBadRequest<Dictionary<string, string>>(errors => _errors = errors)
            .OnOK(async () =>
            {
                UriHelper.NavigateTo("/");
                _errors = null;
            })
            .Post(loginViewModel);
        StateHasChanged();
    }
}
