@page "/account/changePassword"
@inject IHttpApiClientRequestBuilderFactory ClientFactory;
@inject IUriHelper UriHelper
<AccountMenu></AccountMenu>

<form method="post" onsubmit="@(async () => await ChangePassword())">
    <div class="form-group">
        <label for="OldPassword">Old Password</label>
        <input id="OldPassword" bind="@model.OldPassword" type="password" class="form-control" />
        <ValidationError FieldName="OldPassword" Errors="@_errors" />
    </div>
    <div class="form-group">
        <label for="NewPassword"> New Password</label>
        <input id="NewPassword" bind="@model.NewPassword" type="password" class="form-control" />
        <ValidationError FieldName="NewPassword" Errors="@_errors" />
    </div>
    <div class="form-group">
        <label for="ConfirmPassword">Confirm Password</label>
        <input id="ConfirmPassword" bind="@model.ConfirmPassword" type="password" class="form-control" />
        <ValidationError FieldName="ConfirmPassword" Errors="@_errors" />
    </div>
    <button type="submit" class="btn btn-default">Update password</button>
</form>
@functions{
    Dictionary<string, string> _errors;
    ChangePasswordViewModel model = new ChangePasswordViewModel();
    async Task ChangePassword()
    {

        _errors = null;
        await ClientFactory.Create("/api/account/changePassword")
        .OnBadRequest<Dictionary<string, string>>(errors => _errors = errors)
        .OnOK(() =>        {
            JsInterop.Toastr("success", "Password changed successfully");
            model = new ChangePasswordViewModel();
        })
        .Post(model);
        StateHasChanged();
    }
}
