@page "/account"
@inject HttpClient Http
@inject IUriHelper UriHelper;

<AccountMenu></AccountMenu>
<form method="post" onsubmit="@(async () => await PostAccount())">
    <div class="form-group">
        <label for="Username">Username</label>
        <input id="Username" bind="@_account.Username" class="form-control" />
        <ValidationError FieldName="Username" Errors="@_errors" />
    </div>
    <div class="form-group">
        <label for="Email">Email</label>
        <input for="Email" class="form-control" bind="@_account.Email" />
        <ValidationError FieldName="Email" Errors="@_errors" />
    </div>
    <button type="submit" class="btn btn-default">Save</button>
</form>


@functions {
AccountViewModel _account = new AccountViewModel();
Dictionary<string, string> _errors;
protected override async Task OnInitAsync()
{
    await new HttpApiClientRequestBuilder(Http, "/api/account/details", UriHelper)
        .OnOK<AccountViewModel>((a) => _account = a)
        .Get();
    StateHasChanged();
}
async Task PostAccount()
{

    JsInterop.ConsoleLog("PostAccount");
    await new HttpApiClientRequestBuilder(Http, "/api/account/edit", UriHelper)
        .OnBadRequest<Dictionary<string, string>>(errors => _errors = errors)
        .OnOK(() =>
        {
            JsInterop.Toastr("success", "Informations saved successfully");
            _errors = null;
        })
        .Post(_account);
    StateHasChanged();
    JsInterop.ConsoleLog("PostAccount done");
}
}

